Part 1: Local repository
1.	Create a local Git repository
When creating a new project on your local machine using Git, you will first create a new repository (or often, 'repo', for short).  
To initialize a git repository in the root of the folder, run the git init command.

git init          
2.	Create a new file in the repo
Create a new file for the project using any text editor. Let’s just create and save a blank file named newfile.txt. 
Once you have created or modified files in a folder containing a git repo, git will notice that the file exists inside the repo. But git will not track the file unless you explicitly tell it to. Git only saves/manages changes to files that it tracks, so we will need to send a command to confirm that yes, we want git to track our new file.

[...]

5.	Make changes in newfile.txt
Let's add new content, or some lines in the newfile.txt, and then try to commit new content to the git repository.

git commit -m "Your 2nd message about the commit"

You will get an error if you run the above command because you have to put your file on the staging area first. Then you will be able to run the commit command. To do so, run the below commands:

git add newfile.txt
git commit -m “Your 2nd message about the commit”

Or 

Git commit -a -m “Your 2nd message about the commit” → This option allows you to skip the staging phase. The addition of -a will automatically stage any files that are already being tracked by Git (changes to files that you have committed before).


6.	Create a new branch and switch to a new branch
git branch my-new-branch         // create a new branch
git branch                                           // show all list of branches
git checkout my-new-branch   // switch master branch to new branch
git branch                                     // show all list of branches


7.	Make changes in newfile.txt
Let's add new content or some lines in the newfile.txt, and then try to commit new content on the git repository; however, this time, all changes will be saved on the new branch.
git add newfile.txt
git commit -m “add changes in txt file and commit in new branch”

